module;
#include <Visera.h>
export module Visera.Runtime.RHI.RenderPass:Postprocessing;

import Visera.Runtime.RHI.Vulkan;

export namespace VE { namespace Runtime
{


	class FPostprocessingPass : FVulkanRenderPass
	{
	public:
		
	private:
		class FFullScreenTriangleSubpass : public FSubpass
		{
			friend class FPostprocessingPass;
			const static inline
			Segment<Byte, 52> VertexShader { 0x03, 0x02, 0x23, 0x07, 0x00, 0x05, 0x01, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, };
		};
	};

} } // namespace VE::Runtime